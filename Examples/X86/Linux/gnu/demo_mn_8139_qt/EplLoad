#!/bin/sh


# Used by udev rule
if [ $# -ge 1 ] ; then
    if [ $1 = "edrv_thread_priority" ] ; then
        # Set real-time priority -81 for Ethernet ISR thread
        chrt -f -p 80 `ps -C \`ps -e -o comm |grep ^irq/.*epl\$\` -o pid --no-headers` 
        exit
    fi
fi


if [ $USER != "root" ] ; then

  echo "Please run 'sudo $0'"

  exit
fi


echo -n "Check if high resolution timer support is available..."

cat /proc/timer_list | grep 'hres_active.*1' > /dev/null
if [ "$?" -ne "0" ] ; then
  echo "  Failed"
  echo
  echo "  High resolution timer support is NOT active."
  echo "  Maybe you need to add 'acpi=force' to kernel command line"
  echo "  or try it on a more recent X86 processor."
  echo
  echo "The EPL module is and will not be loaded!"
  echo
  
  exit
else
  echo "  OK"
fi


echo -n "Searching for RTL8139 nic..."

module="epl"

# unbind network card from ethernet driver
pciid=$(lspci | grep RTL-8139 | awk "{printf \"0000:\"\$1}")
if [ -z $pciid ] ; then
  echo "  Failed"
  echo
  echo "  No network interface controller with"
  echo "  Realtek RTL8139 chip found!"
  echo
  echo "The EPL module cannot be loaded!"
  echo
  
  exit
else
  echo "  OK"
fi


echo "unbinding PCI device $pciid"
echo -n $pciid > /sys/bus/pci/drivers/8139too/unbind


# install special udev rule
if [ -d /etc/udev/rules.d ] ; then
    EPLLOAD_PATH=`dirname $(readlink -f ${0})`
    cat 50-openPOWERLINK.rules | sed "s#EPLLOAD_PATH#${EPLLOAD_PATH}#" > /etc/udev/rules.d/50-openPOWERLINK.rules
    which service > /dev/null
    if [ "$?" -eq "0" ] ; then
        service udev reload
    else
        /etc/init.d/udev reload
    fi
fi

echo "Loading EPL module..."

# invoke insmod with all arguments we got
# and use a pathname, as insmod doesn't look in . by default
/sbin/insmod ./$module.ko $*

if [ "$?" -ne "0" ] ; then
  echo " Loading of EPL module failed"
  exit 1
else
  echo "EPL module successfully loaded."
  echo
  echo "Please start the POWERLINK demo application."
  echo

fi

# Set real-time priority -82 for hr-timer threads
chrt -f -p 81 `ps -C sirq-hrtimer/0 -o pid --no-headers`
chrt -f -p 81 `ps -C sirq-hrtimer/1 -o pid --no-headers` 
# For kernel-queue shared-buffer thread, priority -80 is set in ShbIpc-LinuxKernel.c
# For Ethernet ISR thread, priority -81 is set by udev rule


# Enable tracing
#echo function       > /sys/kernel/debug/tracing/current_tracer
#echo sched_switch   > /sys/kernel/debug/tracing/current_tracer
#echo function_graph > /sys/kernel/debug/tracing/current_tracer
#echo 'EplDllk* EdrvCyclic* TgtEthIsr EplPdok* EplEventk* EplNmtk* EplLin* EplApi*' > /sys/kernel/debug/tracing/set_ftrace_filter
#echo funcgraph-abstime > /sys/kernel/debug/tracing/trace_options
#echo 1 > /sys/kernel/debug/tracing/tracing_enabled
#chmod o+w /sys/kernel/debug/tracing/tracing_enabled

exit 0


